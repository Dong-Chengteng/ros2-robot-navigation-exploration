name: Security Scan

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '0 2 * * 1'  # 每周一凌晨2点运行

permissions:
  contents: read
  security-events: write
  actions: read

jobs:
  trivy-scan:
    runs-on: ubuntu-22.04
    permissions:
      contents: read
      security-events: write
      actions: read
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@0.24.0
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'
    
    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v3
      if: always() && hashFiles('trivy-results.sarif') != ''
      with:
        sarif_file: 'trivy-results.sarif'
        category: 'trivy-scan'
      continue-on-error: true
    
    - name: Display Trivy scan results
      if: always()
      run: |
        if [ -f "trivy-results.sarif" ]; then
          echo "Trivy scan completed successfully"
          echo "Results saved to trivy-results.sarif"
        else
          echo "Trivy scan failed or no results generated"
        fi

  dependency-check:
    runs-on: ubuntu-22.04
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install safety bandit
    
    - name: Run safety check
      run: |
        safety check -r requirements.txt --json --output safety-report.json || true
    
    - name: Run bandit security check
      run: |
        bandit -r src/ -f json -o bandit-report.json || true
    
    - name: Display security check results
      if: always()
      run: |
        echo "=== Safety Check Results ==="
        if [ -f "safety-report.json" ]; then
          cat safety-report.json
        else
          echo "No safety issues found"
        fi
        
        echo "=== Bandit Check Results ==="
        if [ -f "bandit-report.json" ]; then
          cat bandit-report.json
        else
          echo "No bandit issues found"
        fi

[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "ros2-smart-exploration"
description = "ROS2 Robot Navigation and Exploration System - Autonomous exploration platform based on multiple advanced algorithms"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "dong", email = "dong@todo.todo"},
]
maintainers = [
    {name = "dong", email = "dong@todo.todo"},
]
keywords = [
    "ros2",
    "robotics",
    "exploration",
    "path-planning",
    "autonomous-navigation",
    "slam",
    "gazebo",
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: POSIX :: Linux",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Hardware :: Hardware Drivers",
]
requires-python = ">=3.8"
dependencies = [
    "numpy>=1.21.0",
    "scipy>=1.7.0",
    "opencv-python>=4.5.0",
    "transforms3d>=0.4.1",
    "matplotlib>=3.5.0",
    "scikit-learn>=1.0.0",
    "pandas>=1.3.0",
    "plotly>=5.0.0",
    "pyyaml>=5.4.0",
    "tqdm>=4.62.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=6.0.0",
    "pytest-cov>=2.12.0",
    "flake8>=3.9.0",
    "black>=21.0.0",
    "isort>=5.9.0",
    "mypy>=0.910",
    "pre-commit>=2.15.0",
]
docs = [
    "sphinx>=4.0.0",
    "sphinx-rtd-theme>=0.5.0",
    "sphinxcontrib-mermaid>=0.7.0",
]
test = [
    "pytest>=6.0.0",
    "pytest-cov>=2.12.0",
    "pytest-mock>=3.6.0",
    "pytest-xdist>=2.4.0",
]

[project.urls]
Homepage = "https://github.com/yourusername/ros2-smart-exploration"
Documentation = "https://yourusername.github.io/ros2-smart-exploration"
Repository = "https://github.com/yourusername/ros2-smart-exploration.git"
"Bug Tracker" = "https://github.com/yourusername/ros2-smart-exploration/issues"
"Source Code" = "https://github.com/yourusername/ros2-smart-exploration"
Changelog = "https://github.com/yourusername/ros2-smart-exploration/blob/main/docs/CHANGELOG.md"

[project.scripts]
ros2-smart-exploration = "first_pkg.main:main"

[tool.setuptools.packages.find]
where = ["src"]
include = ["first_pkg*"]

[tool.setuptools.package-data]
first_pkg = [
    "config/*.yaml",
    "config/*.rviz",
    "launch/*.launch.py",
    "urdf/**/*.xacro",
    "urdf/**/*.urdf",
    "models/**/*.sdf",
    "models/**/*.config",
    "map/**/*.world",
    "map/**/*.sdf",
    "map/**/*.config",
]

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["first_pkg"]
known_third_party = ["numpy", "scipy", "cv2", "rclpy", "geometry_msgs", "nav_msgs"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
show_error_codes = true

[[tool.mypy.overrides]]
module = [
    "cv2.*",
    "transforms3d.*",
    "plotly.*",
    "sklearn.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["src/first_pkg/first_pkg"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/env/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503", "E501"]
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    ".venv",
    ".eggs",
    "*.egg-info",
]
per-file-ignores = [
    "__init__.py:F401",
    "tests/*:S101",
]

[tool.bandit]
exclude_dirs = ["tests", "examples"]
skips = ["B101", "B601"]
